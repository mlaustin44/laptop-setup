---
- name: Install pyenv dependencies
  become: yes
  apt:
    name:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
    state: present

- name: Clone pyenv repository
  become: true
  become_user: "{{ target_user }}"
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ target_home }}/.pyenv"
    version: master

- name: Download and install NVM
  become: true
  become_user: "{{ target_user }}"
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
  args:
    creates: "{{ target_home }}/.nvm"

- name: Install Node.js via NVM
  shell: |
    bash -c 'source {{ target_home }}/.nvm/nvm.sh && nvm install {{ versions.node_version }} && nvm use {{ versions.node_version }} && nvm alias default {{ versions.node_version }}'
  args:
    creates: "{{ target_home }}/.nvm/versions/node"
  environment:
    NVM_DIR: "{{ target_home }}/.nvm"
  become: true
  become_user: "{{ target_user }}"

- name: Install essential Node.js global packages
  shell: |
    bash -c 'source {{ target_home }}/.nvm/nvm.sh && npm install -g pnpm yarn typescript ts-node playwright @playwright/test'
  environment:
    NVM_DIR: "{{ target_home }}/.nvm"
  become: true
  become_user: "{{ target_user }}"
  ignore_errors: yes

# Install Go
- name: Download Go
  get_url:
    url: "https://go.dev/dl/go{{ versions.go_version }}.linux-amd64.tar.gz"
    dest: "/tmp/go{{ versions.go_version }}.linux-amd64.tar.gz"

- name: Extract Go
  become: yes
  unarchive:
    src: "/tmp/go{{ versions.go_version }}.linux-amd64.tar.gz"
    dest: /usr/local
    remote_src: yes
    creates: /usr/local/go

# Install Rust
- name: Download rustup installer
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rustup-init.sh
    mode: '0755'

- name: Install Rust
  shell: /tmp/rustup-init.sh -y --default-toolchain stable
  args:
    creates: "{{ target_home }}/.cargo"

# Install Zig
- name: Create Zig directory
  file:
    path: "{{ target_home }}/zig"
    state: directory

- name: Download and extract Zig
  unarchive:
    src: https://ziglang.org/download/0.11.0/zig-linux-x86_64-0.11.0.tar.xz
    dest: "{{ target_home }}/zig"
    remote_src: yes
    creates: "{{ target_home }}/zig/zig-linux-x86_64-0.11.0"

- name: Create Zig symlink
  file:
    src: "{{ target_home }}/zig/zig-linux-x86_64-0.11.0/zig"
    dest: "{{ target_home }}/zig/zig"
    state: link